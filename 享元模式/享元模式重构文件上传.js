// 首先，我们需要确认插件类型 uploadType 是内部状态，那为什么单单 uploadType 是内部状态
// 呢？前面讲过，划分内部状态和外部状态的关键主要有以下几点。
//  内部状态储存于对象内部。
//  内部状态可以被一些对象共享。
//  内部状态独立于具体的场景，通常不会改变。
//  外部状态取决于具体的场景，并根据场景而变化，外部状态不能被共享。
// 在文件上传的例子里， upload 对象必须依赖 uploadType 属性才能工作，这是因为插件上传、
// Flash 上传、表单上传的实际工作原理有很大的区别，它们各自调用的接口也是完全不一样的，
// 必须在对象创建之初就明确它是什么类型的插件，才可以在程序的运行过程中，让它们分别调用
// 各自的 start、 pause、 cancel、 del 等方法。
// 
// 实际上在微云的真实代码中，虽然插件和 Flash 上传对象最终创建自一个大的工厂类，但它
// 们实际上根据 uploadType 值的不同，分别是来自于两个不同类的对象。（在目前的例子中，为了
// 简化代码，我们把插件和 Flash 的构造函数合并成了一个。）
// 一旦明确了 uploadType，无论我们使用什么方式上传，这个上传对象都是可以被任何文件共
// 用的。而 fileName 和 fileSize 是根据场景而变化的，每个文件的 fileName 和 fileSize 都不一样，
// fileName 和 fileSize 没有办法被共享，它们只能被划分为外部状态。