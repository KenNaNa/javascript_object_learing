this的指向
除去不常用的 with 和 eval 的情况，具体到实际应用中，this 的指向大致可以分为以下 4 种。
 作为对象的方法调用。
 作为普通函数调用。
 构造器调用。
 Function.prototype.call 或 Function.prototype.apply 调用
有时候我们会遇到一些困扰，比如在 div 节点的事件函数内部，有一个局部的 callback 方法，
callback 被作为普通函数调用时，callback 内部的 this 指向了 window，但我们往往是想让它指向
该 div 节点，见如下代码：
<html>
 <body>
 <div id="div1">我是一个 div</div>
 </body>
 <script>
 window.id = 'window';
 document.getElementById( 'div1' ).onclick = function(){
 alert ( this.id ); // 输出：'div1'
 var callback = function(){
 alert ( this.id ); // 输出：'window'
 }
 callback();
 };
 </script>
</html>
此时有一种简单的解决方案，可以用一个变量保存 div 节点的引用
在 ECMAScript 5 的 strict 模式下，这种情况下的 this 已经被规定为不会指向全局对象，而
是 undefined